name: Build

on: [push]

jobs:
  test_w_es:
    name: Test with Elasticsearch
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        es-version: [6.5.4, 6.8.3]
        # es-version: [6.8.3, 7.3.2]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install -Ur requirements-dev.txt
          make install-dev

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          make lint-syntax-errors

      - name: Lint with pylint
        run: |
          make lint-no-fail

      - name: Lint for security issues (with bandit)
        run: make lint-security-issues

      - name: Install Elasticsearch 6
        if: startsWith( matrix.es-version, '6')
        run: |
          wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${{ matrix.es-version }}.tar.gz
          tar -xzf elasticsearch-${{ matrix.es-version }}.tar.gz
          echo "TEST_ELASTICSEARCH_ENABLED=True" >> .env
          echo "TEST_ES_HOME=`realpath elasticsearch-${{ matrix.es-version }}`" >> .env
          echo "SEARCH_CONTEXT=es6_search_service" >> .env
          cat .env
          # pip install -e .[elasticsearch6]

      - name: Install Elasticsearch 7
        if: startsWith( matrix.es-version, '7')
        run: |
          wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${{ matrix.es-version }}-linux-x86_64.tar.gz
          tar -xzf elasticsearch-${{ matrix.es-version }}-linux-x86_64.tar.gz
          echo "TEST_ELASTICSEARCH_ENABLED=True" >> .env
          echo "TEST_ES_HOME=`realpath elasticsearch-${{ matrix.es-version }}`" >> .env
          cat .env
          pip install -e .[elasticsearch7]

      - name: Test with pytest
        run: make test-w-coverage
        env:
          DB_DRIVER: sqlite
          DB_DATABASE: karp

  test_w_sql:
    name: Test with SQL
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install-dev
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          make lint-syntax-errors
      - name: Lint with pylint
        run: make lint-no-fail
      - name: Test with pytest
        run: make test-w-coverage
        continue-on-error: true
        env:
          DB_DRIVER: sqlite
          DB_DATABASE: karp

