name: Build & Publish karp-lex-core

on:
  push:
    tags:
      - karp-lex-core-v*

env:
  POETRY_VERSION: "1.2.0"
  PYTHON_VERSION: "3.10"
  JUST_VERSION: "1.13.0"

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.task.name }} py-${{ matrix.python-version }} (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]
        task:
          - name: Lint with Ruff
            run: just karp-lex-core/lint
          - name: Type-check with mypy
            run: just karp-lex-core/type-check

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: extractions/setup-just@v1
        with:
          just-version: ${{ env.JUST_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: just karp-lex-core/install-ci

      - name: Setup up environment
        run: cp -v .env.ci .env

      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}

  test:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.task.name }} py-${{ matrix.python-version }} es-${{ matrix.es-version }} (${{ matrix.os }})
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]
        task:
          - name: Run tests
            run: just karp-lex-core/test-w-coverage

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: extractions/setup-just@v1
        with:
          just-version: ${{ env.JUST_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: just karp-lex-core/install-dev

      - name: Setup up environment
        run: cp -v .env.ci .env

      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}

  publish:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: extractions/setup-just@v1
        with:
          just-version: ${{ env.JUST_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Build distribution
        run: just karp-lex-core/build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.repository == 'spraakbanken/karp-backend' && startsWith(github.ref, 'refs/tags/')
        with:
          password: ${{ secrets.KARP_LEX_CORE_PYPI_PASSWORD }}
          packages_dir: karp-lex-core/dist
